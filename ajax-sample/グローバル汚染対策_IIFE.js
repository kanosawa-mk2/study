// IIFE（Immediately Invoked Function Expression）を使用する

(function () {
    // ここに変数や関数を定義
    var myVariable = 10;

    function myFunction() {
        console.log('Hello, World!');
    }

    // 他のコードへの影響を防ぐため、ここでのみ有効な変数や関数を宣言

    myFunction();
})();

// myVariableやmyFunctionはこのスコープ外でアクセスできない


// Immediately Invoked Function Expression（IIFE）は、JavaScriptで関数を定義して即座に呼び出す方法です。
// IIFEは、関数が定義されると同時にその場で実行されるため、グローバルスコープを汚染せずに変数や関数をプライベートに保つことができます。

// IIFEを使用する主な利点は以下の通りです：

// スコープの分離: IIFE内で定義された変数や関数は、IIFE外からアクセスできません。
// これにより、グローバルスコープを汚染せずに、一時的な変数や関数を使用できます。

// プライベートスコープ: IIFE内で定義された変数や関数は、IIFE外からアクセスできないため、外部からの不正な変更を防ぎます。
// これにより、変数や関数が特定のコードブロック内でのみ有効であることを確実にすることができます。

// 即時実行: IIFEは定義されるとすぐに実行されるため、特定のコードを即座に実行するために使用されます。
// 例えば、初期化コードや設定を実行するために使用されることがあります。